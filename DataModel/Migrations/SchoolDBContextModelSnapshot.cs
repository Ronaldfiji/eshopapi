// <auto-generated />
using System;
using DataModel.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataModel.Migrations
{
    [DbContext(typeof(SchoolDBContext))]
    partial class SchoolDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("DataModel.Entity.Assessment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TermID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TermID");

                    b.HasIndex("UserID");

                    b.ToTable("Assessment", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "Y11BIOST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6035),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 2,
                            Code = "Y11BIOST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6037),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 3,
                            Code = "Y11BIOST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6039),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 4,
                            Code = "Y11BIOST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6040),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 5,
                            Code = "Y11BIOST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6041),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 6,
                            Code = "Y11BIOST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6043),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 7,
                            Code = "Y11BIOPR1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6045),
                            IPAddress = "230.145.124.210",
                            Name = "Project 1, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 8,
                            Code = "Y11BIOPR2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6047),
                            IPAddress = "230.145.124.210",
                            Name = "Project 2, Year 11 Biology",
                            SubjectID = 1,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 9,
                            Code = "Y12ENGST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6048),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 12 English",
                            SubjectID = 2,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 10,
                            Code = "Y12ENGST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6050),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 12 English",
                            SubjectID = 2,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 11,
                            Code = "Y12ENGST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6051),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 12 English",
                            SubjectID = 2,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 12,
                            Code = "Y12ENGST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6052),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 12 English",
                            SubjectID = 2,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 13,
                            Code = "Y12ENGST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6054),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 12 English",
                            SubjectID = 2,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 14,
                            Code = "Y12ENGST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6055),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 12 English",
                            SubjectID = 2,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 15,
                            Code = "Y12ENGST7",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6057),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 12 English",
                            SubjectID = 2,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 16,
                            Code = "Y12ENGST8",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6058),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 8, Year 12 English",
                            SubjectID = 2,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 15
                        },
                        new
                        {
                            ID = 17,
                            Code = "Y12ENGST9",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6060),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 9, Year 12 English",
                            SubjectID = 2,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 15
                        },
                        new
                        {
                            ID = 18,
                            Code = "Y11MATST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6062),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 11 Mathmatics",
                            SubjectID = 3,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 19,
                            Code = "Y11MATST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6064),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 11 Mathmatics",
                            SubjectID = 3,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 15
                        },
                        new
                        {
                            ID = 20,
                            Code = "Y11MATST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6065),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 11 Mathmatics",
                            SubjectID = 3,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 21,
                            Code = "Y11MATST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6066),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 11 Mathmatics",
                            SubjectID = 3,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 15
                        },
                        new
                        {
                            ID = 22,
                            Code = "Y11MATST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6068),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 11 Mathmatics",
                            SubjectID = 3,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 23,
                            Code = "Y11MATST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6070),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 11 Mathmatics",
                            SubjectID = 3,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 24,
                            Code = "Y11CHMST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6079),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 11 Chemistry",
                            SubjectID = 4,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 25,
                            Code = "Y11CHMST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6081),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 11 Chemistry",
                            SubjectID = 4,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 26,
                            Code = "Y11CHMST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6084),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 11 Chemistry",
                            SubjectID = 4,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 27,
                            Code = "Y11CHMST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6089),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 11 Chemistry",
                            SubjectID = 4,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 28,
                            Code = "Y11CHMST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6090),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 11 Chemistry",
                            SubjectID = 4,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 29,
                            Code = "Y11CHMST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6091),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 11 Chemistry",
                            SubjectID = 4,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 30,
                            Code = "Y09MATST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6093),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 31,
                            Code = "Y09MATST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6094),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 32,
                            Code = "Y09MATST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6096),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 33,
                            Code = "Y09MATST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6098),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 34,
                            Code = "Y09MATST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6099),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 35,
                            Code = "Y09MATST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6101),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 36,
                            Code = "Y09MATST7",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6103),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 37,
                            Code = "Y09MATPR1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6105),
                            IPAddress = "230.145.124.210",
                            Name = "Project 1, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 15
                        },
                        new
                        {
                            ID = 38,
                            Code = "Y09MATPR2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6107),
                            IPAddress = "230.145.124.210",
                            Name = "Project 2, Year 09 Mathmatics",
                            SubjectID = 5,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 15
                        },
                        new
                        {
                            ID = 39,
                            Code = "Y09ENGST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6109),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 09 English",
                            SubjectID = 6,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 40,
                            Code = "Y09ENGST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6111),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 English",
                            SubjectID = 6,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 41,
                            Code = "Y09ENGST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6113),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 English",
                            SubjectID = 6,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 42,
                            Code = "Y09ENGST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6114),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 English",
                            SubjectID = 6,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 43,
                            Code = "Y09ENGST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6115),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 English",
                            SubjectID = 6,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 44,
                            Code = "Y09ENGPR1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6117),
                            IPAddress = "230.145.124.210",
                            Name = "Project 1, Year 09 English",
                            SubjectID = 6,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 45,
                            Code = "Y09ENGST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6119),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 English",
                            SubjectID = 6,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 46,
                            Code = "Y09ENGST7",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6120),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 09 English",
                            SubjectID = 6,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 47,
                            Code = "Y09ENGPR2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6122),
                            IPAddress = "230.145.124.210",
                            Name = "Project 2, Year 09 English",
                            SubjectID = 6,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 48,
                            Code = "Y09BSCST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6123),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 49,
                            Code = "Y09BSCST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6125),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 50,
                            Code = "Y09BSCRT1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6126),
                            IPAddress = "230.145.124.210",
                            Name = "Report 1, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 51,
                            Code = "Y09BSCST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6128),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 52,
                            Code = "Y09BSCST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6129),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 53,
                            Code = "Y09BSCRT2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6131),
                            IPAddress = "230.145.124.210",
                            Name = "Report 2, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 54,
                            Code = "Y09BSCST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6133),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 55,
                            Code = "Y09BSCST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6134),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 56,
                            Code = "Y09BSCRT3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6136),
                            IPAddress = "230.145.124.210",
                            Name = "Report 3, Year 09 Basic Science",
                            SubjectID = 7,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 57,
                            Code = "Y09TDST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6137),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 58,
                            Code = "Y09TDST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6139),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 59,
                            Code = "Y09TDST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6140),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 60,
                            Code = "Y09TDST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6142),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 61,
                            Code = "Y09TDST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6143),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 62,
                            Code = "Y09TDST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6145),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 63,
                            Code = "Y09TDST7",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6146),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 64,
                            Code = "Y09TDST8",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6148),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 8, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 65,
                            Code = "Y09TDPR1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6150),
                            IPAddress = "230.145.124.210",
                            Name = "Project 1, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 66,
                            Code = "Y09TDPR2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6152),
                            IPAddress = "230.145.124.210",
                            Name = "Project 2, Year 09 Technical Drawing",
                            SubjectID = 8,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 67,
                            Code = "Y09AGSST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6154),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 68,
                            Code = "Y09AGSST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6155),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 69,
                            Code = "Y09AGSST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6157),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 70,
                            Code = "Y09AGSST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6159),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 71,
                            Code = "Y09AGSST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6164),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 72,
                            Code = "Y09AGSST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6165),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 73,
                            Code = "Y09AGSPR1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6167),
                            IPAddress = "230.145.124.210",
                            Name = "Project 1, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 74,
                            Code = "Y09AGSPR2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6168),
                            IPAddress = "230.145.124.210",
                            Name = "Project 2, Year 09 Agriculture Science",
                            SubjectID = 9,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 20
                        },
                        new
                        {
                            ID = 75,
                            Code = "Y09ACCST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6170),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 76,
                            Code = "Y09ACCST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6172),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 77,
                            Code = "Y09ACCST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6173),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 78,
                            Code = "Y09ACCST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6175),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 79,
                            Code = "Y09ACCST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6180),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 80,
                            Code = "Y09ACCST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6181),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 81,
                            Code = "Y09ACCST7",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6184),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 82,
                            Code = "Y09ACCST8",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6186),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 8, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 83,
                            Code = "Y09ACCST9",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6188),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 9, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 84,
                            Code = "Y09ACCST10",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6190),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 10, Year 09 Accounting",
                            SubjectID = 10,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 85,
                            Code = "Y09ECOST1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6191),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 1, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 86,
                            Code = "Y09ECOST2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6194),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 2, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 87,
                            Code = "Y09ECOST3",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6195),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 3, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 88,
                            Code = "Y09ECOST4",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6203),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 4, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 1,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 89,
                            Code = "Y09ECOST5",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6205),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 5, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 90,
                            Code = "Y09ECOST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6206),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 91,
                            Code = "Y09ECOPR1",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6208),
                            IPAddress = "230.145.124.210",
                            Name = "Project 1, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 2,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 92,
                            Code = "Y09ECOST6",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6209),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 6, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 93,
                            Code = "Y09ECOST7",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6212),
                            IPAddress = "230.145.124.210",
                            Name = "Short Test 7, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        },
                        new
                        {
                            ID = 94,
                            Code = "Y09ECOPR2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6214),
                            IPAddress = "230.145.124.210",
                            Name = "Project 2, Year 09 Economics",
                            SubjectID = 11,
                            TermID = 3,
                            UpdatedBy = "",
                            Weight = 10
                        });
                });

            modelBuilder.Entity("DataModel.Entity.ClassRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatingCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("ClassRoom", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "3A",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5591),
                            Description = "Form 3 A block info",
                            IPAddress = "",
                            Name = "Form 3 A",
                            SchoolId = 1,
                            SchoolYearId = 1,
                            SeatingCapacity = 52,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            Code = "4B",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5594),
                            Description = "Form 4 B block info",
                            IPAddress = "",
                            Name = "Form 4 B",
                            SchoolId = 1,
                            SchoolYearId = 1,
                            SeatingCapacity = 52,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("Course", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "Y11SC",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5750),
                            Description = "Year 11 Science",
                            IPAddress = "255.255.255.1",
                            Name = "Y11Science",
                            SchoolYearId = 11,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 2,
                            Code = "Y12SC",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5755),
                            Description = "Year 12 Science",
                            IPAddress = "255.255.255.1",
                            Name = "Y12Science",
                            SchoolYearId = 12,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 3,
                            Code = "Y09CO",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5757),
                            Description = "Year 09 Commercial",
                            IPAddress = "255.255.255.1",
                            Name = "Y09Commercial",
                            SchoolYearId = 9,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 4,
                            Code = "Y09EN",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5759),
                            Description = "Year 09 Engineering",
                            IPAddress = "255.255.255.1",
                            Name = "Y09Engineering",
                            SchoolYearId = 9,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 5,
                            Code = "Y09SC",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5760),
                            Description = "Year 09 Science",
                            IPAddress = "255.255.255.1",
                            Name = "Y09Science",
                            SchoolYearId = 9,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 6,
                            Code = "Y09SC2",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5762),
                            Description = "Year 09 Science II",
                            IPAddress = "255.255.255.1",
                            Name = "Y09Science II",
                            SchoolYearId = 9,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 7,
                            Code = "Y11CO",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5765),
                            Description = "Year 11 Commercial",
                            IPAddress = "255.255.255.1",
                            Name = "Y11Commercial",
                            SchoolYearId = 11,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 8,
                            Code = "Y11EN",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5767),
                            Description = "Year 11 Engineering",
                            IPAddress = "255.255.255.1",
                            Name = "Y11Engineering",
                            SchoolYearId = 11,
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 9,
                            Code = "Y12CO",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5769),
                            Description = "Year 12 Commercial",
                            IPAddress = "255.255.255.1",
                            Name = "Y12Commercial",
                            SchoolYearId = 12,
                            UpdatedBy = "RonAdmin"
                        });
                });

            modelBuilder.Entity("DataModel.Entity.CourseSubject", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CourseSubject", "SchoolApi");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            SubjectId = 1,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5978),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 1,
                            SubjectId = 3,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5982),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 1,
                            SubjectId = 4,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5983),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 2,
                            SubjectId = 2,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5984),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 3,
                            SubjectId = 5,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5985),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 3,
                            SubjectId = 6,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5986),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 3,
                            SubjectId = 7,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5987),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 3,
                            SubjectId = 10,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5988),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 3,
                            SubjectId = 11,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5989),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 4,
                            SubjectId = 5,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5990),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 4,
                            SubjectId = 6,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5991),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 4,
                            SubjectId = 7,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5992),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 4,
                            SubjectId = 8,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5993),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 4,
                            SubjectId = 9,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5994),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 5,
                            SubjectId = 5,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5995),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 5,
                            SubjectId = 6,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5996),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 5,
                            SubjectId = 7,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5997),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 6,
                            SubjectId = 5,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5998),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 6,
                            SubjectId = 6,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5999),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 6,
                            SubjectId = 7,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6000),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 6,
                            SubjectId = 9,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6001),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 7,
                            SubjectId = 3,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6007),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 8,
                            SubjectId = 3,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6008),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        },
                        new
                        {
                            CourseId = 9,
                            SubjectId = 2,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6009),
                            IPAddress = "245.36.210.199",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.Enroll", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateEnrolment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateWithdrawal")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Passed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CourseId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("UserId", "CourseId")
                        .IsUnique();

                    b.ToTable("Enroll", "SchoolApi");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.CartItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CartItem", "EShopDb");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Category", "EShopDb");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "CAT0001",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6293),
                            Description = "Head Phones Category",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-headphones",
                            Name = "Head Phones and Ear Phones",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            Code = "CAT0002",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6295),
                            Description = "Computers & Tablets Category",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-desktop",
                            Name = "Computers & Tablets",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            Code = "CAT0003",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6297),
                            Description = "Phones & Wearables Category",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-desktop",
                            Name = "Phones & Wearables",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            Code = "CAT0004",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6298),
                            Description = "TV, Blu-ray & Home Theatre Category",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-desktop",
                            Name = "TV, Blu-ray & Home Theatre",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 5,
                            Code = "CAT0005",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6300),
                            Description = "Kitchen appliance Category",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-desktop",
                            Name = "Kitchen Appliance",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 6,
                            Code = "CAT0006",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6301),
                            Description = "Cattle & Sheep Category",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-desktop",
                            Name = "Cattle & Sheep",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 7,
                            Code = "CAT0007",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6303),
                            Description = "Items under fashion and jewelry",
                            IPAddress = "255.255.255.1",
                            Icon = "fa fa-desktop",
                            Name = "Fashion & Jewelry",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Customer", "EShopDb");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CashOut")
                        .HasPrecision(9, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentRef")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentsType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalDue")
                        .HasPrecision(9, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalReceived")
                        .HasPrecision(9, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Payment", "EShopDb");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnPromotion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductUnitID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(9, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ProductUnitID");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UserID");

                    b.ToTable("Product", "EShopDb");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Code = "PR0001",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6403),
                            Description = "Head phone for professionals",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = true,
                            Name = "Professional Head Phone",
                            Quantity = 320,
                            Rating = 4,
                            SupplierID = 2,
                            UnitPrice = 49.99m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            Code = "PR0002",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6409),
                            Description = "Great gear for professionals, ultra sound quality",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Head Phone",
                            Quantity = 76,
                            Rating = 2,
                            SupplierID = 2,
                            UnitPrice = 36.49m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 3,
                            Code = "PR0003",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6411),
                            Description = "Phone and time on your wrist",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Wrist Watch",
                            Quantity = 60,
                            Rating = 5,
                            SupplierID = 1,
                            UnitPrice = 89.99m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 5,
                            Code = "PR0004",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6415),
                            Description = "With its spacious capacity and convenient design, the Electrolux 609L UltimateTaste 900 French Door Fridge with Ice & Water Dispenser - Natural Stainless is a practical storage space option for busy kitchens.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "French Door Fridge",
                            Quantity = 40,
                            Rating = 5,
                            SupplierID = 3,
                            UnitPrice = 2999m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 5,
                            Code = "PR0005",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6418),
                            Description = "Samsung 40L Microwave Oven - Stainless Steel\r\nThis stylish Samsung Solo microwave features 40L capacity, auto defrost function, one minute plus, sensor technology and more.\r\n",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Microwave Oven",
                            Quantity = 1056,
                            Rating = 3,
                            SupplierID = 3,
                            UnitPrice = 499m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 4,
                            Code = "PR0006",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6425),
                            Description = "Experience lifelike visuals and enveloping sound as you watch your favourite movies and TV series with the Sony 83-inch XR MASTER series A90J 4K UHD OLED Google TV. It features a frameless design to minimise distractions and blend seamlessly with the rest of your room's décor scheme.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Sony Smart TV MASTER",
                            Quantity = 106,
                            Rating = 3,
                            SupplierID = 3,
                            UnitPrice = 2499m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 4,
                            Code = "PR0007",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6428),
                            Description = "The JBL BAR 1300 11.1.4 Channel Dolby Atmos Soundbar with Detachable Speaker delivers an immersive sound experience that brings your movies, TV shows, and music to life. Featuring Dolby Atmos and DTS:X technology, this soundbar creates a 3D soundstage that surrounds you with sound from every angle. The powerful 10-inch wireless subwoofer delivers deep, punchy bass, while 4K pass-through with HDR 10 and Dolby Vision support ensures stunning picture quality. With its 6 up-firing speakers with Multibeam technology, multiple HDMI inputs, and Bluetooth and WiFi connectivity, this soundbar is the perfect addition to your home entertainment system.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Sound Bar",
                            Quantity = 10,
                            Rating = 5,
                            SupplierID = 3,
                            UnitPrice = 1995m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 7,
                            Code = "PR0008",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6431),
                            Description = "Maximise your sparkle with our Pandora Timeless Pavé Double-row Ring. With warm 14k rose gold plating, this hand-finished ring features two rows of clear cubic zirconia around the centre and one row facing outwards around each side, creating a slightly rounded square profile that sparkles from every angle. Wear it on its own or stacked with other Timeless Pavé rings to create as bold of a look as you want.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Pandora Timeless Pavé Double-row Ring",
                            Quantity = 10,
                            Rating = 5,
                            SupplierID = 4,
                            UnitPrice = 2995m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 9,
                            CategoryID = 7,
                            Code = "PR0009",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6433),
                            Description = "Maximise your sparkle with our Pandora Timeless Pavé Double-row Ring. With warm 14k rose gold plating, this hand-finished ring features two rows of clear cubic zirconia around the centre and one row facing outwards around each side, creating a slightly rounded square profile that sparkles from every angle. Wear it on its own or stacked with other Timeless Pavé rings to create as bold of a look as you want.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Moissanite Necklace Sterling Silver",
                            Quantity = 10,
                            Rating = 5,
                            SupplierID = 4,
                            UnitPrice = 2995m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 10,
                            CategoryID = 7,
                            Code = "PR0010",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6434),
                            Description = "Crafted with most peculiar pearls of south pacific",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "White & Golden Pearl Pendant Necklaces",
                            Quantity = 10,
                            Rating = 5,
                            SupplierID = 4,
                            UnitPrice = 5995m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 11,
                            CategoryID = 7,
                            Code = "PR0011",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6437),
                            Description = "London Collection 18k diamond and pink sapphire dangle necklace. 18k rose gold round diamond necklace with heart shaped pink sapphire dangles. Total diamond weight 1.17cts, total sapphire weight 3.05cts.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "18k diamond and pink sapphire necklace",
                            Quantity = 2,
                            Rating = 3,
                            SupplierID = 4,
                            UnitPrice = 1995m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 12,
                            CategoryID = 7,
                            Code = "PR0012",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6438),
                            Description = "<p>True magic is capturing a moment, freezing it in time to cherish forever. The locket is the keeper of those moments, with you always those feelings will remain. We designed the locket to bring all of life's precious moments close to your heart.  Wrap your memory in the metal of your choice for a truly special piece unique to you.</p><p>Select from solid sterling silver, 14k rose or gold plated 2 microns on silver </br>Charm quote - With you always </br>Oval locket is 16mm x 12mm in size </br>Upload up to two images, one for each side of the locket + 1 image for the box </br>Locket's image dimensions are 13mm x 8 mm </p>",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Oval locket medium siler",
                            Quantity = 5,
                            Rating = 4,
                            SupplierID = 4,
                            UnitPrice = 4285.75m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 13,
                            CategoryID = 7,
                            Code = "PR0013",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6441),
                            Description = "<table><tr><td>Detail Information:</td><td></td></tr><tr><td style={{width:\"300px\"}}>Material:</td><td style={{width:\"300px\"}}>925 Sterling Silver;</td></tr><tr><td>Center Stone_Carat Weight:</td><td>1.0 Carat;</td></tr><tr><td>Center Stone Shape:</td><td>Round Cut(6.4mm);</td></tr><tr><td>Chain Length:</td><td>400mm (+50mm);</td></tr><tr><td>Plating Color:</td><td>White Gold;</td></tr><tr><td>Stone:</td><td>Moissanite;</td></tr></table>",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Vintage ruby set - Sterling Silver",
                            Quantity = 150,
                            Rating = 4,
                            SupplierID = 4,
                            UnitPrice = 1285.99m,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 14,
                            CategoryID = 6,
                            Code = "PR0014",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6443),
                            Description = "One only female sheep for sale. Price is FJD$320.00. Located in Tavua and only pickup during working hours.",
                            IPAddress = "255.255.255.1",
                            ImageURL = "",
                            IsOnPromotion = false,
                            Name = "Female sheep",
                            Quantity = 1,
                            Rating = 1,
                            SupplierID = 4,
                            UnitPrice = 320m,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.ProductImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductImage", "EShopDb");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6481),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0001",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-a-1.webp",
                            Path = "Static/Products/PR0001/PR0001Headphone-a-1.webp",
                            ProductID = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6484),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0001",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-a-2.webp",
                            Path = "Static/Products/PR0001/PR0001Headphone-a-2.webp",
                            ProductID = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6485),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0001",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-a-3.webp",
                            Path = "Static/Products/PR0001/PR0001Headphone-a-3.webp",
                            ProductID = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6487),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0001",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-a-4.webp",
                            Path = "Static/Products/PR0001/PR0001Headphone-a-4.webp",
                            ProductID = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6488),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0001",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-a-5.webp",
                            Path = "Static/Products/PR0001/PR0001Headphone-a-5.webp",
                            ProductID = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6490),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0002",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-b-1.webp",
                            Path = "Static/Products/PR0002/PR0002Headphone-b-1.webp",
                            ProductID = 2,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 7,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6492),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0002",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-b-2.webp",
                            Path = "Static/Products/PR0002/PR0002Headphone-b-2.webp",
                            ProductID = 2,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 8,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6493),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0002",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-b-3.webp",
                            Path = "Static/Products/PR0002/PR0002Headphone-b-3.webp",
                            ProductID = 2,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 9,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6495),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0002",
                            IPAddress = "45.241.250.15",
                            Name = "Headphone-b-4.webp",
                            Path = "Static/Products/PR0002/PR0002Headphone-b-4.webp",
                            ProductID = 2,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 10,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6496),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0003",
                            IPAddress = "45.241.250.15",
                            Name = "WristWatch-a-1.webp",
                            Path = "Static/Products/PR0003/PR0003WristWatch-a-1.webp",
                            ProductID = 3,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 11,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6497),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0003",
                            IPAddress = "45.241.250.15",
                            Name = "WristWatch-a-2.webp",
                            Path = "Static/Products/PR0003/PR0003WristWatch-a-2.webp",
                            ProductID = 3,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 12,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6500),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0003",
                            IPAddress = "45.241.250.15",
                            Name = "WristWatch-a-3.webp",
                            Path = "Static/Products/PR0003/PR0003WristWatch-a-3.webp",
                            ProductID = 3,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 13,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6501),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0003",
                            IPAddress = "45.241.250.15",
                            Name = "WristWatch-a-4.webp",
                            Path = "Static/Products/PR0003/PR0003WristWatch-a-4.webp",
                            ProductID = 3,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 14,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6503),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0004",
                            IPAddress = "45.241.250.15",
                            Name = "PR0004Freeze1.webp",
                            Path = "Static/Products/PR0004/PR0004Freeze1.webp",
                            ProductID = 4,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 15,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6504),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0004",
                            IPAddress = "45.241.250.15",
                            Name = "PR0004Freeze2.jpg",
                            Path = "Static/Products/PR0004/PR0004Freeze2.jpg",
                            ProductID = 4,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 16,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6505),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0004",
                            IPAddress = "45.241.250.15",
                            Name = "PR0004Freeze3.jpg",
                            Path = "Static/Products/PR0004/PR0004Freeze3.jpg",
                            ProductID = 4,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 17,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6508),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0004",
                            IPAddress = "45.241.250.15",
                            Name = "PR0004Freeze4.jpg",
                            Path = "Static/Products/PR0004/PR0004Freeze4.jpg",
                            ProductID = 4,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 18,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6510),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0004",
                            IPAddress = "45.241.250.15",
                            Name = "PR0004Freeze5.jpg",
                            Path = "Static/Products/PR0004/PR0004Freeze5.jpg",
                            ProductID = 4,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 19,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6511),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0004",
                            IPAddress = "45.241.250.15",
                            Name = "PR0004Freeze6.jpg",
                            Path = "Static/Products/PR0004/PR0004Freeze6.jpg",
                            ProductID = 4,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 20,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6513),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0005",
                            IPAddress = "45.241.250.15",
                            Name = "PR0005Micowave1.jpg",
                            Path = "Static/Products/PR0005/PR0005Micowave1.jpg",
                            ProductID = 5,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 21,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6514),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0005",
                            IPAddress = "45.241.250.15",
                            Name = "PR0005Micowave2.jpg",
                            Path = "Static/Products/PR0005/PR0005Micowave2.jpg",
                            ProductID = 5,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 22,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6516),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0005",
                            IPAddress = "45.241.250.15",
                            Name = "PR0005Micowave3.jpg",
                            Path = "Static/Products/PR0005/PR0005Micowave3.jpg",
                            ProductID = 5,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 23,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6517),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0005",
                            IPAddress = "45.241.250.15",
                            Name = "PR0005Micowave4.jpg",
                            Path = "Static/Products/PR0005/PR0005Micowave4.jpg",
                            ProductID = 5,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 24,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6519),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_1.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_1.webp",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 25,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6520),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_2.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_2.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 26,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6522),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_3.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_3.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 27,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6523),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_4.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_4.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 28,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6524),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_5.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_5.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 29,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6526),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_6.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_6.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 30,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6527),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_7.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_7.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 31,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6528),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0006",
                            IPAddress = "45.241.250.15",
                            Name = "PR0006SonySmartTV_8.jpg",
                            Path = "Static/Products/PR0006/PR0006SonySmartTV_8.jpg",
                            ProductID = 6,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 32,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6529),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0007",
                            IPAddress = "45.241.250.15",
                            Name = "PR0007SoundBar_1.jpg",
                            Path = "Static/Products/PR0007/PR0007SoundBar_1.jpg",
                            ProductID = 7,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 33,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6531),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0007",
                            IPAddress = "45.241.250.15",
                            Name = "PR0007SoundBar_2.jpg",
                            Path = "Static/Products/PR0007/PR0007SoundBar_2.jpg",
                            ProductID = 7,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 34,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6532),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0007",
                            IPAddress = "45.241.250.15",
                            Name = "PR0007SoundBar_3.jpg",
                            Path = "Static/Products/PR0007/PR0007SoundBar_3.jpg",
                            ProductID = 7,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 35,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6533),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0007",
                            IPAddress = "45.241.250.15",
                            Name = "PR0007SoundBar_4.jpg",
                            Path = "Static/Products/PR0007/PR0007SoundBar_4.jpg",
                            ProductID = 7,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 36,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6535),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0007",
                            IPAddress = "45.241.250.15",
                            Name = "PR0007SoundBar_5.jpg",
                            Path = "Static/Products/PR0007/PR0007SoundBar_5.jpg",
                            ProductID = 7,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 37,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6536),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0008",
                            IPAddress = "45.241.250.15",
                            Name = "PR0008diamondring8ck_1.webp",
                            Path = "Static/Products/PR0008/PR0008diamondring8ck_1.webp",
                            ProductID = 8,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 38,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6538),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0008",
                            IPAddress = "45.241.250.15",
                            Name = "PR0008diamondring8ck_2.webp",
                            Path = "Static/Products/PR0008/PR0008diamondring8ck_2.webp",
                            ProductID = 8,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 39,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6539),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0008",
                            IPAddress = "45.241.250.15",
                            Name = "PR0008diamondring8ck_3.gif",
                            Path = "Static/Products/PR0008/PR0008diamondring8ck_3.gif",
                            ProductID = 8,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 40,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6546),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0008",
                            IPAddress = "45.241.250.15",
                            Name = "PR0008diamondring8ck_4.webp",
                            Path = "Static/Products/PR0008/PR0008diamondring8ck_4.webp",
                            ProductID = 8,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 41,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6547),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0009",
                            IPAddress = "45.241.250.15",
                            Name = "PR0009moissanite-necklace_1.webp",
                            Path = "Static/Products/PR0009/PR0009moissanite-necklace_1.webp",
                            ProductID = 9,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 42,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6549),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0009",
                            IPAddress = "45.241.250.15",
                            Name = "PR0009moissanite-necklace_2.webp",
                            Path = "Static/Products/PR0009/PR0009moissanite-necklace_2.webp",
                            ProductID = 9,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 43,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6554),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0009",
                            IPAddress = "45.241.250.15",
                            Name = "PR0009moissanite-necklace_3.webp",
                            Path = "Static/Products/PR0009/PR0009moissanite-necklace_3.webp",
                            ProductID = 9,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 44,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6556),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0009",
                            IPAddress = "45.241.250.15",
                            Name = "PR0009moissanite-necklace_4.webp",
                            Path = "Static/Products/PR0009/PR0009moissanite-necklace_4.webp",
                            ProductID = 9,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 45,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6558),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0009",
                            IPAddress = "45.241.250.15",
                            Name = "PR0009moissanite-necklace_5.webp",
                            Path = "Static/Products/PR0009/PR0009moissanite-necklace_5.webp",
                            ProductID = 9,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 46,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6559),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0010",
                            IPAddress = "45.241.250.15",
                            Name = "PR0010Pearls-natrualstone_1.jpg",
                            Path = "Static/Products/PR0010/PR0010Pearls-natrualstone_1.jpg",
                            ProductID = 10,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 47,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6560),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0010",
                            IPAddress = "45.241.250.15",
                            Name = "PR0010Pearls-natrualstone_2.jpg",
                            Path = "Static/Products/PR0010/PR0010Pearls-natrualstone_2.jpg",
                            ProductID = 10,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 48,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6562),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0010",
                            IPAddress = "45.241.250.15",
                            Name = "PR0010Pearls-natrualstone_3.jpg",
                            Path = "Static/Products/PR0010/PR0010Pearls-natrualstone_3.jpg",
                            ProductID = 10,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 49,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6563),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0010",
                            IPAddress = "45.241.250.15",
                            Name = "PR0010Pearls-natrualstone_4.jpg",
                            Path = "Static/Products/PR0010/PR0010Pearls-natrualstone_4.jpg",
                            ProductID = 10,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 50,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6564),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0010",
                            IPAddress = "45.241.250.15",
                            Name = "PR0010Pearls-natrualstone_5.jpg",
                            Path = "Static/Products/PR0010/PR0010Pearls-natrualstone_5.jpg",
                            ProductID = 10,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 51,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6565),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0011",
                            IPAddress = "45.241.250.15",
                            Name = "PR0011diamond-pink-sapphire_1.webp",
                            Path = "Static/Products/PR0011/PR0011diamond-pink-sapphire_1.webp",
                            ProductID = 11,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 52,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6567),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0012",
                            IPAddress = "45.241.250.15",
                            Name = "PR0012oval_locket_siler_1.webp",
                            Path = "Static/Products/PR0012/PR0012oval_locket_siler_1.webp",
                            ProductID = 12,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 53,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6568),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0012",
                            IPAddress = "45.241.250.15",
                            Name = "PR0012oval_locket_siler_2.webp",
                            Path = "Static/Products/PR0012/PR0012oval_locket_siler_2.webp",
                            ProductID = 12,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 54,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6569),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0012",
                            IPAddress = "45.241.250.15",
                            Name = "PR0012oval_locket_siler_3.webp",
                            Path = "Static/Products/PR0012/PR0012oval_locket_siler_3.webp",
                            ProductID = 12,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 55,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6570),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0012",
                            IPAddress = "45.241.250.15",
                            Name = "PR0012oval_locket_siler_4.webp",
                            Path = "Static/Products/PR0012/PR0012oval_locket_siler_4.webp",
                            ProductID = 12,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 56,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6572),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0012",
                            IPAddress = "45.241.250.15",
                            Name = "PR0012oval_locket_siler_5.webp",
                            Path = "Static/Products/PR0012/PR0012oval_locket_siler_5.webp",
                            ProductID = 12,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 57,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6573),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0013",
                            IPAddress = "45.241.250.15",
                            Name = "PR0013vintagerubyset_1.webp",
                            Path = "Static/Products/PR0013/PR0013vintagerubyset_1.webp",
                            ProductID = 13,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 58,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6574),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0013",
                            IPAddress = "45.241.250.15",
                            Name = "PR0013vintagerubyset_2.webp",
                            Path = "Static/Products/PR0013/PR0013vintagerubyset_2.webp",
                            ProductID = 13,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 59,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6576),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0013",
                            IPAddress = "45.241.250.15",
                            Name = "PR0013vintagerubyset_3.webp",
                            Path = "Static/Products/PR0013/PR0013vintagerubyset_3.webp",
                            ProductID = 13,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 60,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6577),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0013",
                            IPAddress = "45.241.250.15",
                            Name = "PR0013vintagerubyset_4.webp",
                            Path = "Static/Products/PR0013/PR0013vintagerubyset_4.webp",
                            ProductID = 13,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 61,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6579),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0013",
                            IPAddress = "45.241.250.15",
                            Name = "PR0013vintagerubyset_5.webp",
                            Path = "Static/Products/PR0013/PR0013vintagerubyset_5.webp",
                            ProductID = 13,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 62,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6580),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0014",
                            IPAddress = "45.241.250.15",
                            Name = "PR0014sheep_1.jpg",
                            Path = "Static/Products/PR0014/PR0014sheep_1.jpg",
                            ProductID = 14,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 63,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6581),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0014",
                            IPAddress = "45.241.250.15",
                            Name = "PR0014sheep_2.jpg",
                            Path = "Static/Products/PR0014/PR0014sheep_2.jpg",
                            ProductID = 14,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 64,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6583),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0014",
                            IPAddress = "45.241.250.15",
                            Name = "PR0014sheep_3.jpg",
                            Path = "Static/Products/PR0014/PR0014sheep_3.jpg",
                            ProductID = 14,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 65,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6585),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0014",
                            IPAddress = "45.241.250.15",
                            Name = "PR0014sheep_4.jpg",
                            Path = "Static/Products/PR0014/PR0014sheep_4.jpg",
                            ProductID = 14,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 66,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6586),
                            Description = "Full path of imageC:\\Projects\\Dev\\SchoolApiv2\\SchoolApiv2\\Resource\\Static\\Products\\PR0014",
                            IPAddress = "45.241.250.15",
                            Name = "PR0014sheep_5.jpg",
                            Path = "Static/Products/PR0014/PR0014sheep_5.jpg",
                            ProductID = 14,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.ProductUnit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("ProductUnit", "EShopDb");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6366),
                            IPAddress = "255.255.255.1",
                            Name = "Kilogram",
                            Unit = "Kilogram",
                            UpdatedBy = "",
                            Weight = 100f
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6367),
                            IPAddress = "255.255.255.1",
                            Name = "Liter",
                            Unit = "Litre",
                            UpdatedBy = "",
                            Weight = 1000f
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6369),
                            IPAddress = "255.255.255.1",
                            Name = "Meter",
                            Unit = "Meter",
                            UpdatedBy = "",
                            Weight = 5.5f
                        });
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Promotion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(9, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountPercent")
                        .HasPrecision(9, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Staus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Promotion", "EShopDb");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Supplier", "EShopDb");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Vitogo Prade Lautoka",
                            City = "Lautoka",
                            Code = "SUP001",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6342),
                            Email = "info@punjas.com",
                            IPAddress = "255.255.255.1",
                            Name = "Punjas Fiji",
                            Phone = "9966331",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            Address = "Vitogo Prade Lautoka",
                            City = "Lautoka",
                            Code = "SUP002",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6343),
                            Email = "info@lautokaeng.com",
                            IPAddress = "255.255.255.1",
                            Name = "Lautoka Engineering",
                            Phone = "9996663",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            Address = "Vitogo Prade Lautoka",
                            City = "Lautoka",
                            Code = "SUP003",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6345),
                            Email = "request@asco.com.fj",
                            IPAddress = "255.255.255.1",
                            Name = "Asco Motors",
                            Phone = "9996343",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            Address = "Main street",
                            City = "Tavua",
                            Code = "SUP004",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6348),
                            Email = "info@payaljewel.com",
                            IPAddress = "255.255.255.1",
                            Name = "Payal Jewelers, Tavua",
                            Phone = "9996343",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.Prerequisite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrerequisiteCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CourseID", "PrerequisiteCourseId")
                        .IsUnique();

                    b.ToTable("Prerequisite", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseID = 2,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6263),
                            IPAddress = "230.145.124.210",
                            PrerequisiteCourseId = 1,
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            CourseID = 9,
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(6265),
                            IPAddress = "230.145.124.210",
                            PrerequisiteCourseId = 7,
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRevorked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", "SchoolApi");
                });

            modelBuilder.Entity("DataModel.Entity.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Role", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6767),
                            Description = "User role",
                            IPAddress = "",
                            Name = "User",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6793),
                            Description = "Admin role",
                            IPAddress = "",
                            Name = "Admin",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6800),
                            Description = "HOD role",
                            IPAddress = "",
                            Name = "HOD",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6806),
                            Description = "Manager role",
                            IPAddress = "",
                            Name = "Manager",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6812),
                            Description = "Director role",
                            IPAddress = "",
                            Name = "Director",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6819),
                            Description = "Seller role",
                            IPAddress = "",
                            Name = "Seller",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.School", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("School", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Kings Road",
                            City = "Tavua",
                            Code = "SS1230",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1510),
                            Description = "School details",
                            District = "Ba",
                            Email = "tc@mail.com",
                            IPAddress = "255.255.255.1",
                            Name = "Tavua College",
                            Phone = "9988998",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            Address = "Kings Road",
                            City = "Tavua",
                            Code = "SS1231",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1514),
                            Description = "School details",
                            District = "Vatukoula",
                            Email = "nh@mail.com",
                            IPAddress = "255.255.255.1",
                            Name = "Nelson High",
                            Phone = "7458785",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            Address = "Drasas Avenue",
                            City = "Lautoka",
                            Code = "SS1232",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1516),
                            Description = "School details",
                            District = "Ba",
                            Email = "cc@mail.com",
                            IPAddress = "255.255.255.1",
                            Name = "Central College",
                            Phone = "8458785",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            Address = "Yaralevu",
                            City = "Ba",
                            Code = "SS1235",
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1519),
                            Description = "School details",
                            District = "Ba",
                            Email = "xc@mail.com",
                            IPAddress = "255.255.255.89",
                            Name = "Xavier College",
                            Phone = "7788990",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.SchoolYear", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("SchoolYear", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "Y01",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1596),
                            Description = "This is year 1 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 1
                        },
                        new
                        {
                            ID = 2,
                            Code = "Y02",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1598),
                            Description = "This is year 2 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 2
                        },
                        new
                        {
                            ID = 3,
                            Code = "Y03",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1600),
                            Description = "This is year 3 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 3
                        },
                        new
                        {
                            ID = 4,
                            Code = "Y04",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1601),
                            Description = "This is year 4 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 4
                        },
                        new
                        {
                            ID = 5,
                            Code = "Y05",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1603),
                            Description = "This is year 5 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 5
                        },
                        new
                        {
                            ID = 6,
                            Code = "Y06",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1605),
                            Description = "This is year 6 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 6
                        },
                        new
                        {
                            ID = 7,
                            Code = "Y07",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1610),
                            Description = "This is year 7 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 7
                        },
                        new
                        {
                            ID = 8,
                            Code = "Y08",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1612),
                            Description = "This is year 8 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 8
                        },
                        new
                        {
                            ID = 9,
                            Code = "Y09",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1613),
                            Description = "This is year 9 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 9
                        },
                        new
                        {
                            ID = 10,
                            Code = "Y10",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1615),
                            Description = "This is year 10 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 10
                        },
                        new
                        {
                            ID = 11,
                            Code = "Y11",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1617),
                            Description = "This is year 11 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 11
                        },
                        new
                        {
                            ID = 12,
                            Code = "Y12",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1619),
                            Description = "This is year 12 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 12
                        },
                        new
                        {
                            ID = 13,
                            Code = "Y13",
                            CreatedBy = "RonaldAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1620),
                            Description = "This is year 13 student",
                            IPAddress = "20.36.323.366",
                            UpdatedBy = "",
                            Year = 13
                        });
                });

            modelBuilder.Entity("DataModel.Entity.Score", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssessedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AssessmentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssessmentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnrollmentID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Grade")
                        .HasPrecision(4, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("AssessmentID");

                    b.HasIndex("EnrollmentID", "AssessmentID")
                        .IsUnique();

                    b.ToTable("Score", "SchoolApi");
                });

            modelBuilder.Entity("DataModel.Entity.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceBook")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Subject", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "Y11BIO",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5911),
                            Description = "Year 11 Biology",
                            IPAddress = "255.255.255.1",
                            Name = "Biology, Year 11",
                            ReferenceBook = "Molecular Biology",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 2,
                            Code = "Y12ENG",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5915),
                            Description = "English for Year 12",
                            IPAddress = "255.255.255.1",
                            Name = "English, Year 12",
                            ReferenceBook = "Peoples English 1",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 3,
                            Code = "Y11MAT",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5917),
                            Description = "Year 11 Mathmatics",
                            IPAddress = "255.255.255.1",
                            Name = "Mathmatics, Year 11",
                            ReferenceBook = "Calculus 1",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 4,
                            Code = "Y11CHM",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5919),
                            Description = "Year 11 Chemistry",
                            IPAddress = "255.255.255.1",
                            Name = "Chemistry, Year 11",
                            ReferenceBook = "Atmosphere and Reaction",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 5,
                            Code = "Y09MAT",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5922),
                            Description = "Year 09 Mathmatics",
                            IPAddress = "255.255.255.1",
                            Name = "Mathmatics, Year 09",
                            ReferenceBook = "Linear Algebra",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 6,
                            Code = "Y09ENG",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5924),
                            Description = "Year 09 English",
                            IPAddress = "255.255.255.1",
                            Name = "English, Year 09",
                            ReferenceBook = "Peoples English",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 7,
                            Code = "Y09BSC",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5930),
                            Description = "Year 09 Basic Science",
                            IPAddress = "255.255.255.1",
                            Name = "Basic Science, Year 09",
                            ReferenceBook = "Air and Water density",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 8,
                            Code = "Y09TD",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5932),
                            Description = "Year 09 Technical Drawing",
                            IPAddress = "255.255.255.1",
                            Name = "Technical Drawing, Year 09",
                            ReferenceBook = "Basic Auto cad by Ron Fiji",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 9,
                            Code = "Y09AGS",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5944),
                            Description = "Year 09 Agriculture Science",
                            IPAddress = "255.255.255.1",
                            Name = "Agriculture Science, Year 09",
                            ReferenceBook = "Plant hoticulture",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 10,
                            Code = "Y09ACC",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5946),
                            Description = "Year 09 Accounting",
                            IPAddress = "255.255.255.1",
                            Name = "Accounting, Year 09",
                            ReferenceBook = "Ledger and balance sheet",
                            UpdatedBy = "RonAdmin"
                        },
                        new
                        {
                            ID = 11,
                            Code = "Y09ECO",
                            CreatedBy = "RonAdmin",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 929, DateTimeKind.Utc).AddTicks(5948),
                            Description = "Year 09 Economics",
                            IPAddress = "255.255.255.1",
                            Name = "Economic, Year 09",
                            ReferenceBook = "Capital and Investment by Ronald Fiji",
                            UpdatedBy = "RonAdmin"
                        });
                });

            modelBuilder.Entity("DataModel.Entity.Term", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SchTerm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Term", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1558),
                            IPAddress = "255.255.255.1",
                            SchTerm = 1,
                            TermName = "Term one",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1561),
                            IPAddress = "255.255.255.1",
                            SchTerm = 2,
                            TermName = "Term two",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1563),
                            IPAddress = "255.255.255.1",
                            SchTerm = 3,
                            TermName = "Term three",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "Ronald",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1565),
                            IPAddress = "255.255.255.1",
                            SchTerm = 4,
                            TermName = "Term four",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("DataModel.Entity.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserTypeID");

                    b.ToTable("User", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AddressLine1 = "First Road X road",
                            AddressLine2 = "10 , Fox Street",
                            City = "Levuka",
                            Country = "Fiji",
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 600, DateTimeKind.Utc).AddTicks(1270),
                            DOB = new DateTime(1956, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            Gender = 3,
                            IPAddress = "107.23.365.369",
                            LastName = "Limited",
                            Password = "$2a$11$j5dEdXZX48I66bb7qh6p1ePR2BLBA6ZqQC3TqpBnRnMF8194W0PKm",
                            Phone = "9090337",
                            PostalCode = "0123",
                            State = "BlackWater",
                            UpdatedBy = "Manager-up",
                            UserTypeID = 1
                        },
                        new
                        {
                            ID = 2,
                            AddressLine1 = "Fula Fula Road",
                            AddressLine2 = "10, Black street",
                            City = "Apia",
                            Country = "Samoa",
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 760, DateTimeKind.Utc).AddTicks(9200),
                            DOB = new DateTime(1979, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@mail.com",
                            FirstName = "John-User",
                            Gender = 1,
                            IPAddress = "107.23.365.369",
                            LastName = "Smith",
                            Password = "$2a$11$z5FXhpT8DPdfHcRaNEGi4uiF61jV/mn3qBRZNCneD4EVvZ5XvDbWC",
                            Phone = "74789699",
                            PostalCode = "458",
                            State = "North",
                            UpdatedBy = "Admin-up",
                            UserTypeID = 1
                        },
                        new
                        {
                            ID = 3,
                            AddressLine1 = "Rock line Island",
                            AddressLine2 = "29, Bush mount road",
                            City = "Port Vila",
                            Country = "Vanuatu",
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1008),
                            DOB = new DateTime(2001, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "peter@mail.com",
                            FirstName = "Peter-Admin",
                            Gender = 3,
                            IPAddress = "107.23.365.369",
                            LastName = "Gates",
                            Password = "$2a$11$hWqy2vJQakifhu0U3UVn2uuU.EH/zSXgmbDtaL1m8yaVk9lXgnPBm",
                            Phone = "8890337",
                            PostalCode = "889",
                            State = "Ocean",
                            UpdatedBy = "Admin-up",
                            UserTypeID = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entity.UserPictures", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AppUserID");

                    b.ToTable("UserPictures", "SchoolApi");
                });

            modelBuilder.Entity("DataModel.Entity.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", "SchoolApi");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1,
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1436),
                            IPAddress = "107.23.365.369",
                            UpdatedBy = "Admin-up"
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2,
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1441),
                            IPAddress = "107.23.365.369",
                            UpdatedBy = "Admin-up"
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1,
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1442),
                            IPAddress = "107.23.365.369",
                            UpdatedBy = "Admin-up"
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1,
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1445),
                            IPAddress = "107.23.365.369",
                            UpdatedBy = "Admin-up"
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2,
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1446),
                            IPAddress = "107.23.365.369",
                            UpdatedBy = "Admin-up"
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 5,
                            CreatedBy = "Admin-cr",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 926, DateTimeKind.Utc).AddTicks(1452),
                            IPAddress = "107.23.365.369",
                            UpdatedBy = "Admin-up"
                        });
                });

            modelBuilder.Entity("DataModel.Entity.UserType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UserType", "SchoolApi");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6834),
                            Description = "Type is user",
                            IPAddress = "",
                            Name = "User",
                            UpdatedBy = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2023, 5, 21, 18, 0, 36, 447, DateTimeKind.Utc).AddTicks(6835),
                            Description = "Type is seller",
                            IPAddress = "",
                            Name = "Seller",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("ProductPromotion", b =>
                {
                    b.Property<int>("productID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("promotionsID")
                        .HasColumnType("INTEGER");

                    b.HasKey("productID", "promotionsID");

                    b.HasIndex("promotionsID");

                    b.ToTable("ProductPromotion", "EShopDb");
                });

            modelBuilder.Entity("DataModel.Entity.Assessment", b =>
                {
                    b.HasOne("DataModel.Entity.Subject", "Subject")
                        .WithMany("Assessment")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.Term", "Term")
                        .WithMany()
                        .HasForeignKey("TermID");

                    b.HasOne("DataModel.Entity.User", null)
                        .WithMany("Assessments")
                        .HasForeignKey("UserID");

                    b.Navigation("Subject");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("DataModel.Entity.ClassRoom", b =>
                {
                    b.HasOne("DataModel.Entity.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.SchoolYear", "SchoolYear")
                        .WithMany()
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("DataModel.Entity.Course", b =>
                {
                    b.HasOne("DataModel.Entity.SchoolYear", "SchoolYear")
                        .WithMany()
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("DataModel.Entity.CourseSubject", b =>
                {
                    b.HasOne("DataModel.Entity.Course", "Course")
                        .WithMany("CourseSubject")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.Subject", "Subject")
                        .WithMany("CourseSubject")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DataModel.Entity.Enroll", b =>
                {
                    b.HasOne("DataModel.Entity.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("School");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Product", b =>
                {
                    b.HasOne("DataModel.Entity.EntityEShop.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.EntityEShop.ProductUnit", "ProductUnit")
                        .WithMany()
                        .HasForeignKey("ProductUnitID");

                    b.HasOne("DataModel.Entity.EntityEShop.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID");

                    b.HasOne("DataModel.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Category");

                    b.Navigation("ProductUnit");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.ProductImage", b =>
                {
                    b.HasOne("DataModel.Entity.EntityEShop.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataModel.Entity.Prerequisite", b =>
                {
                    b.HasOne("DataModel.Entity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DataModel.Entity.RefreshToken", b =>
                {
                    b.HasOne("DataModel.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataModel.Entity.Score", b =>
                {
                    b.HasOne("DataModel.Entity.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.Enroll", "Enrollment")
                        .WithMany()
                        .HasForeignKey("EnrollmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assessment");

                    b.Navigation("Enrollment");
                });

            modelBuilder.Entity("DataModel.Entity.User", b =>
                {
                    b.HasOne("DataModel.Entity.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("DataModel.Entity.UserPictures", b =>
                {
                    b.HasOne("DataModel.Entity.User", "AppUser")
                        .WithMany("UserPictures")
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DataModel.Entity.UserRole", b =>
                {
                    b.HasOne("DataModel.Entity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductPromotion", b =>
                {
                    b.HasOne("DataModel.Entity.EntityEShop.Product", null)
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entity.EntityEShop.Promotion", null)
                        .WithMany()
                        .HasForeignKey("promotionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entity.Course", b =>
                {
                    b.Navigation("CourseSubject");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("DataModel.Entity.EntityEShop.Product", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("DataModel.Entity.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DataModel.Entity.Subject", b =>
                {
                    b.Navigation("Assessment");

                    b.Navigation("CourseSubject");
                });

            modelBuilder.Entity("DataModel.Entity.User", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("Enrollments");

                    b.Navigation("UserPictures");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
